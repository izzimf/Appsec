const express = require("express");
const bodyParser = require("body-parser");
const app = express();
const PORT = process.env.PORT || 3000;

// parse application/x-www-form-urlencoded (form submit)
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

// ‚ùå –£—è–∑–≤–∏–º–æ—Å—Ç—å 1: Hardcoded credentials
const ADMIN_USER = "admin";
const ADMIN_PASS = "123456"; // ‚ö†Ô∏è –ø–∞—Ä–æ–ª—å –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω

// GET / - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ä–º–æ–π –≤—Ö–æ–¥–∞
app.get("/", (req, res) => {
  res.send(`
    <h2>Login App (vulnerable) üöÄ</h2>
    <form method="POST" action="/login">
      <label>Username:</label><br>
      <input type="text" name="username" /><br><br>
      <label>Password:</label><br>
      <input type="password" name="password" /><br><br>
      <button type="submit">Login</button>
    </form>
    <p>Try POST /login</p>
  `);
});

// POST /login - —É—è–∑–≤–∏–º–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (reflected XSS + hardcoded creds)
app.post("/login", (req, res) => {
  const { username, password } = req.body;

  if (username === ADMIN_USER && password === ADMIN_PASS) {
    // –í—Å—Ç–∞–≤–∫–∞ username –ø—Ä—è–º–æ –≤ HTML ‚Äî reflected XSS —Ä–∏—Å–∫
    res.send(`<h1>Welcome, ${username}!</h1>`);
  } else {
    // –¢–æ–∂–µ –æ—Ç—Ä–∞–∂–∞–µ–º username ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç XSS
    res.send(`<p>Invalid credentials for ${username}</p>`);
  }
});

// GET /error - –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É—Ç–µ—á–∫–∏ —Å—Ç–µ–∫–∞
app.get("/error", (req, res) => {
  try {
    throw new Error("Something broke!");
  } catch (err) {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º stack ‚Äî —ç—Ç–æ –ø–ª–æ—Ö–æ (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —É—Ç–µ—á–∫–∞)
    res.send(`Error details: <pre>${err.stack}</pre>`);
  }
});

app.listen(PORT, () => {
  console.log(`Vulnerable server running on http://localhost:${PORT}`);
});
